{"version":3,"sources":["components/Navigation/SideBar/SideBar.module.scss","components/Navigation/Toolbar/Toolbar.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","components/Navigation/SideBar/BarToggle/BarToggle.module.scss","containers/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/Box/Box.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideBar/BarToggle/BarToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideBar/SideBar.js","containers/Layout/Layout.js","components/UI/Box/Box.js","containers/About/About.js","containers/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navigationItem","props","className","classes","NavigationItem","to","link","activeClassName","active","exact","children","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","BarToggle","barToggleClicked","Desktop","backdrop","show","Backdrop","sideBar","attachedClasses","SideBar","Close","open","Open","closed","join","Layout","state","showSideBar","sideBarCloseHandler","setState","sideBarToggleHandler","prevState","this","Content","Component","box","Box","About","Contact","id","App","path","component","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e775b1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__2hk38\",\"Open\":\"SideBar_Open__3KH8o\",\"Close\":\"SideBar_Close__27Dms\",\"Logo\":\"SideBar_Logo__13M5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1-Zcd\",\"Desktop\":\"Toolbar_Desktop__2p-sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3VlVL\",\"active\":\"NavigationItem_active__YKR7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__i8nGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"BarToggle_DrawerToggle__2Xr__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2Mw8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3nvpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__2b623\"};","import React from 'react';\r\nimport classes from './NavigationItem.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n\t<li className={classes.NavigationItem}>\r\n\t\t<NavLink to={props.link} activeClassName={classes.active} exact>\r\n\t\t\t{props.children}\r\n\t\t</NavLink>\r\n\t</li>\r\n);\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.scss';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n\t<ul className={classes.NavigationItems}>\r\n\t\t<NavigationItem link=\"/\">About</NavigationItem>\r\n\t\t<NavigationItem link=\"/projects\">Projects</NavigationItem>\r\n\t\t<NavigationItem link=\"/contact\">Contact</NavigationItem>\r\n\t</ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport classes from './BarToggle.module.scss';\r\n\r\nconst drawerToggle = (props) => (\r\n\t<div onClick={props.clicked} className={classes.DrawerToggle}>\r\n\t\t<i className=\"fas fa-caret-square-down\" />\r\n\t</div>\r\n);\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.scss';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport BarToggle from '../SideBar/BarToggle/BarToggle';\r\n\r\nconst toolbar = (props) => (\r\n\t<header className={classes.Toolbar}>\r\n\t\t<BarToggle clicked={props.barToggleClicked} />\r\n\t\t<nav className={classes.Desktop}>\r\n\t\t\t<NavigationItems />\r\n\t\t</nav>\r\n\t</header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst backdrop = (props) => (props.show ? <div className={classes.Backdrop} onClick={props.clicked} /> : null);\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideBar.module.scss';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideBar = (props) => {\r\n\tlet attachedClasses = [classes.SideBar, classes.Close];\r\n\tif (props.open) {\r\n\t\tattachedClasses = [classes.SideBar, classes.Open];\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Backdrop show={props.open} clicked={props.closed} />\r\n\t\t\t<div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<NavigationItems />\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default sideBar;\r\n","import React, { Component } from 'react';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport classes from './Layout.module.scss';\r\nimport SideBar from '../../components/Navigation/SideBar/SideBar';\r\n\r\nclass Layout extends Component {\r\n\tstate = {\r\n\t\tshowSideBar: false,\r\n\t};\r\n\r\n\tsideBarCloseHandler = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowSideBar: false,\r\n\t\t});\r\n\t};\r\n\r\n\tsideBarToggleHandler = () => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn { showSideBar: !prevState.showSideBar };\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Toolbar barToggleClicked={this.sideBarToggleHandler} />\r\n\t\t\t\t<SideBar open={this.state.showSideBar} closed={this.sideBarCloseHandler} />\r\n\t\t\t\t<main className={classes.Content}>{this.props.children}</main>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport classes from './Box.module.scss';\r\n\r\nconst box = (props) => <div className={classes.Box}>{props.children}</div>;\r\n\r\nexport default box;\r\n","import React, { Component } from 'react';\r\nimport classes from './About.module.scss';\r\nimport Box from '../../components/UI/Box/Box';\r\n\r\nclass About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<h1> Hi, I'm Brenda!</h1>\r\n\r\n\t\t\t\t\t<p>I am a Software Engineer.</p>\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport classes from './Contact.module.scss';\r\nimport Box from '../../components/UI/Box/Box';\r\n\r\nclass Contact extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t<Box>\r\n\t\t\t<div id=\"contact\"><h1>Contact</h1></div>\r\n\t\t\t\r\n\t\t</Box>)\r\n\t}\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Layout from './containers/Layout/Layout';\r\nimport About from './containers/About/About';\r\nimport Contact from './containers/Contact/Contact';\r\nimport './components/UI/TextFadeIn/TextFadeIn.scss';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Layout />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" component={About} exact />\r\n\t\t\t\t\t<Route path=\"/personal\" component={About} exact />\r\n\t\t\t\t\t<Route path=\"/contact\" component={Contact} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n\t<BrowserRouter>\r\n\t\t<App />\r\n\t</BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}