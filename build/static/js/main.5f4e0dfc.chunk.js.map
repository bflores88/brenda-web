{"version":3,"sources":["components/Navigation/SideBar/SideBar.module.scss","components/Navigation/Toolbar/Toolbar.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","components/Navigation/SideBar/BarToggle/BarToggle.module.scss","containers/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/Box/Box.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideBar/BarToggle/BarToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideBar/SideBar.js","containers/Layout/Layout.js","components/UI/Box/Box.js","containers/About/About.js","containers/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navigationItem","props","className","classes","NavigationItem","to","link","activeClassName","active","exact","children","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","BarToggle","barToggleClicked","Desktop","backdrop","show","Backdrop","sideBar","attachedClasses","SideBar","Close","open","Open","closed","join","Layout","state","showSideBar","sideBarCloseHandler","setState","sideBarToggleHandler","prevState","this","Content","Component","box","Box","About","Contact","App","path","component","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f4e0dfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__3-g60\",\"Open\":\"SideBar_Open__3c7Ew\",\"Close\":\"SideBar_Close__2_4B2\",\"Logo\":\"SideBar_Logo__2eZXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1XByl\",\"Desktop\":\"Toolbar_Desktop__3inmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eVc8\",\"active\":\"NavigationItem_active__3i0Bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2YZH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"BarToggle_DrawerToggle__Ni9T1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__4iIFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__1tmez\"};","import React from 'react';\nimport classes from './NavigationItem.module.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n\t<li className={classes.NavigationItem}>\n\t\t<NavLink to={props.link} activeClassName={classes.active} exact>\n\t\t\t{props.children}\n\t\t</NavLink>\n\t</li>\n);\n\nexport default navigationItem;\n","import React from 'react';\nimport classes from './NavigationItems.module.scss';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n\t<ul className={classes.NavigationItems}>\n\t\t<NavigationItem link=\"/\">Home</NavigationItem>\n\t\t<NavigationItem link=\"/about\">About</NavigationItem>\n\t\t<NavigationItem link=\"/projects\">Projects</NavigationItem>\n\t\t<NavigationItem link=\"/contact\">Contact</NavigationItem>\n\t</ul>\n);\n\nexport default navigationItems;\n","import React from 'react';\nimport classes from './BarToggle.module.scss';\n\nconst drawerToggle = (props) => (\n\t<div onClick={props.clicked} className={classes.DrawerToggle}>\n\t\t<i className=\"fas fa-caret-square-down\" />\n\t</div>\n);\n\nexport default drawerToggle;\n","import React from 'react';\nimport classes from './Toolbar.module.scss';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport BarToggle from '../SideBar/BarToggle/BarToggle';\n\nconst toolbar = (props) => (\n\t<header className={classes.Toolbar}>\n\t\t<BarToggle clicked={props.barToggleClicked} />\n\t\t<nav className={classes.Desktop}>\n\t\t\t<NavigationItems />\n\t\t</nav>\n\t</header>\n);\n\nexport default toolbar;\n","import React from 'react';\n\nimport classes from './Backdrop.module.scss';\n\nconst backdrop = (props) => (props.show ? <div className={classes.Backdrop} onClick={props.clicked} /> : null);\n\nexport default backdrop;\n","import React from 'react';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideBar.module.scss';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideBar = (props) => {\n\tlet attachedClasses = [classes.SideBar, classes.Close];\n\tif (props.open) {\n\t\tattachedClasses = [classes.SideBar, classes.Open];\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Backdrop show={props.open} clicked={props.closed} />\n\t\t\t<div className={attachedClasses.join(' ')} onClick={props.closed}>\n\t\t\t\t<nav>\n\t\t\t\t\t<NavigationItems />\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default sideBar;\n","import React, { Component } from 'react';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport classes from './Layout.module.scss';\nimport SideBar from '../../components/Navigation/SideBar/SideBar';\n\nclass Layout extends Component {\n\tstate = {\n\t\tshowSideBar: false,\n\t};\n\n\tsideBarCloseHandler = () => {\n\t\tthis.setState({\n\t\t\tshowSideBar: false,\n\t\t});\n\t};\n\n\tsideBarToggleHandler = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn { showSideBar: !prevState.showSideBar };\n\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Toolbar barToggleClicked={this.sideBarToggleHandler} />\n\t\t\t\t<SideBar open={this.state.showSideBar} closed={this.sideBarCloseHandler} />\n\t\t\t\t<main className={classes.Content}>{this.props.children}</main>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Layout;\n","import React from 'react';\n\nimport classes from './Box.module.scss';\n\nconst box = (props) => <div className={classes.Box}>{props.children}</div>;\n\nexport default box;\n","import React, { Component } from 'react';\nimport classes from './About.module.scss';\nimport Box from '../../components/UI/Box/Box';\n\nclass About extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Box>\n\t\t\t\t\t<h1> Hi, I'm Brenda!</h1>\n\t\t\t\t</Box>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport classes from './Contact.module.scss';\n\nclass Contact extends Component {\n\trender() {\n\t\treturn <h1>Contact Page</h1>;\n\t}\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from './containers/Layout/Layout';\nimport About from './containers/About/About';\nimport Contact from './containers/Contact/Contact';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Layout />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" component={About} exact />\n\t\t\t\t\t<Route path=\"/contact\" component={Contact} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}